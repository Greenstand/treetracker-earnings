openapi: 3.1.0
info:
  title: earningss API
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /earnings/batch:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: |-
            CSV 
            Columns: earnings_id,worker_id,phone,amount,currency,status
          content:
            text/csv:
              schema:
                type: CSV
              examples:
                columns: 'earnings_id,worker_id,phone,amount,currency,status'
        '400':
          description: Bad Request - invalid query parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
      operationId: get-earningss-batch
      parameters:
        - schema:
            type: string
          in: query
          name: earnings_status
        - schema:
            type: string
          in: query
          name: funder_id
          description: The stackholder id that is funding these earnings via the contract
        - schema:
            type: string
          in: query
          name: worker_id
          description: The stackholder id that is being paid (a person normally)
        - schema:
            type: string
          in: query
          name: contract_id
          description: A reference to a contract in the contract microservice
        - schema:
            type: string
          in: query
          name: start_date
        - schema:
            type: string
          in: query
          name: end_date
      description: Get a CSV of earnings resources
    patch:
      summary: ''
      operationId: patch-earningss-batch
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - completed
                      - queued
                    description: we will add 'queued' later when we implement a pipeline
                  count:
                    type: number
                    description: the number of rows processed
              examples:
                example-1:
                  value:
                    status: completed
                    count: 0
        '400':
          description: |
            Validation:  payment confirmation id and payment system are required
            Validation:  status must not be cancelled or paid for the earnings id of the request
            Validation:  worker_id, amount, or currency in request must match those found in the database for the earnings id
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                  row_errors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        message:
                          type: string
        '406':
          description: Bad file or wrong headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
        '409':
          description: Earnings resource already has a payment confirmation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                  row_errors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        message:
                          type: string
      requestBody:
        content:
          text/csv:
            schema:
              type: CSV
            examples:
              columns: 'earnings_id,worker_id,phone,amount,currency,earnings_system,earnings_confirmation_id'
        description: |-
          CSV

          Columns:
          earnings_id,worker_id,phone,amount,currency,payment_system,payment_confirmation_id,paid_at
      description: |-
        Patch an multiple earnings resources with the payment confirmation information.  
        Validation: payment confirmation id and payment system are required
        Validation:  status must not be cancelled or paid for the earnings id of the request
        Validation:  worker_id, amount, or currency in request must match those found in the database for the earnings id
    parameters: []
  /earnings:
    patch:
      summary: ''
      operationId: patch-earnings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - completed
                      - queued
                    description: we will add 'queued' later when we implement a pipeline
                  count:
                    type: number
                    description: the number of rows processed
              examples: {}
        '400':
          description: |
            Validation:  payment confirmation id and payment system are required
            Validation:  status must not be cancelled or paid for the earnings id of the request
            Validation:  worker_id, amount, or currency in request must match those found in the database for the earnings id
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
        '406':
          description: Bad file or wrong headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
        '409':
          description: Earnings resource already has a payment confirmation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                worker_id:
                  type: string
                  format: uuid
                amount:
                  type: number
                currency:
                  type: string
                payment_confirmation_id:
                  type: string
                  format: date
                payment_system:
                  type: string
                paid_at:
                  type: string
              required:
                - id
                - worker_id
                - amount
                - currency
                - payment_confirmation_id
            examples: {}
        description: 'Patch an earnings resource with the payment confirmation information.  '
      description: |-
        Patch an multiple earnings resources with the payment confirmation information.  
        Validation:  payment confirmation id and payment system are required
        Validation:  status must not be cancelled or paid for the earnings id of the request
        Validation:  worker_id, amount, or currency in request must match those found in the database for the earnings id
    parameters: []
    get:
      summary: Get list of earnings
      operationId: get-earnings
      produces:
        - text/csv
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type:
                  - object
                properties:
                  worker_id:
                    type: string
                  funder_id:
                    type: string
                  amount:
                    type: number
                  currency:
                    type: string
                  calculated_at:
                    type: string
                  consolidation_rule:
                    type: string
                  consolidation_period_start:
                    type: string
                  consolidation_period_end:
                    type: string
                  payment_confirmation_id:
                    type: string
                  payment_system:
                    type: string
                  payment_confirmed_by:
                    type: string
                    format: uuid
                  payment_confirmation_method:
                    type: string
                  paid_at:
                    type: string
                  payment_confirmed_at:
                    type: string
                  status:
                    type: string
                  batch_id:
                    type: string
              examples: {}
        '400':
          description: Bad Request - Invalid query parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
      description: Get a list of earnings resources using the appropriate filters
      parameters:
        - schema:
            type: string
          in: query
          name: earnings_status
        - schema:
            type: string
          in: query
          name: funder_id
          description: The stackholder id that is funding these earnings via the contract
        - schema:
            type: string
          in: query
          name: worker_id
          description: The stackholder id that is being paid (a person normally)
        - schema:
            type: string
          in: query
          name: contract_id
          description: A reference to a contract in the contract microservice
        - schema:
            type: string
          in: query
          name: start_date
          description: Spans calculated_at
        - schema:
            type: string
          in: query
          name: end_date
          description: Spans calculated_at
        - schema:
            type: string
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: offset
components:
  schemas: {}
  securitySchemes:
    Bearer Token:
      name: API Key
      type: apiKey
      in: header
